'use client';

import React from 'react';
import { zodResolver } from '@hookform/resolvers/zod';
import { useForm } from 'react-hook-form';
import { z } from 'zod';
import GridBackground from '@repo/ui/components/grid-background';
import {
  Card,
  CardContent,
  CardDescription,
  CardFooter,
  CardHeader,
  CardTitle,
} from '@repo/ui/components/card';
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from '@repo/ui/components/form';
import { Input } from '@repo/ui/components/input';
import { ConfettiButton } from '@repo/ui/components/confetti-button';
import { Label } from '@repo/ui/components/label';
import Typography from '@repo/ui/components/typography';
import { User } from 'lucide-react';
import MainLogo from '@repo/ui/common/main-logo';
import Heading from '@repo/ui/components/heading';
import { Button } from '@repo/ui/components/button';
import { Loader } from 'lucide-react';
import { toast } from 'sonner';
import { useVerify2FAOnSignMutation } from '../../../lib/features/services/auth/authApi';

const verify2FASchema = z.object({
  token: z
    .string()
    .min(6, { message: 'Code must be 6 digits' })
    .max(6, { message: 'Code must be 6 digits' })
    .regex(/^\d{6}$/, { message: 'Invalid verification code' }),
});

const Verify2fa = () => {
  const [verify2FAOnSign, { isLoading, isSuccess }] =
    useVerify2FAOnSignMutation();
  const form = useForm<z.infer<typeof verify2FASchema>>({
    resolver: zodResolver(verify2FASchema),
    mode: 'onChange',
    defaultValues: {
      token: '',
    },
  });
  async function onSubmit(data: z.infer<typeof verify2FASchema>) {
    await toast.promise(
      verify2FAOnSign(data)
        .unwrap()
        .then((res) => {
          setTimeout(() => {
            window.location.reload();
          }, 2000);
          return res;
        }),
      {
        loading: 'Verifying your identity...',
        success: (res) =>
          res?.message || '2FA verification successful. You are now signed in.',
        error: (err) =>
          err?.data?.message ||
          'Verification failed. Please check your code and try again.',
      },
    );
  }

  return (
    <GridBackground>
      <div className="container max-w-lg">
        <div className="space-y-6">
          <div className="flex flex-col items-center justify-center gap-6">
            <MainLogo />
            <Heading as="h6">Verify Your Identity</Heading>
          </div>
          <Form {...form}>
            <form onSubmit={form.handleSubmit(onSubmit)}>
              <Card>
                <CardHeader>
                  <CardTitle>
                    To keep your account secure, we verify your identity.
                  </CardTitle>
                  <CardDescription>
                    Enter the code generated by your authenticator app.
                  </CardDescription>
                </CardHeader>
                <CardContent>
                  <div className="space-y-6">
                    <div className="space-y-3">
                      <Label>Account</Label>
                      <div className="flex items-center gap-1.5">
                        <User className="size-4" />
                        <Typography variant="sm">Md Robin</Typography>
                      </div>
                    </div>
                    <FormField
                      control={form.control}
                      name="token"
                      render={({ field }) => (
                        <FormItem>
                          <FormLabel>Verification Code</FormLabel>
                          <FormControl>
                            <Input {...field} />
                          </FormControl>
                          <FormMessage />
                        </FormItem>
                      )}
                    />
                  </div>
                </CardContent>
                <CardFooter className="grid grid-cols-2 gap-3">
                  <Button variant="destructive" type="button">
                    Cancel
                  </Button>
                  <ConfettiButton
                    autoConfetti={isSuccess}
                    disableConfettiOnClick
                  >
                    {isLoading && <Loader className="animate-spin" />}
                    Submit
                  </ConfettiButton>
                </CardFooter>
              </Card>
            </form>
          </Form>
        </div>
      </div>
    </GridBackground>
  );
};

export default Verify2fa;
